class Announcement < ::ApplicationRecord
  extend ::_ActiveRecord_Relation_ClassMethods[::Announcement, ::Announcement::ActiveRecord_Relation, ::Integer]

  module GeneratedAttributeMethods
    def id: () -> ::Integer

    def id=: (::Integer) -> ::Integer

    def id?: () -> bool

    def id_changed?: () -> bool

    def id_change: () -> [ ::Integer?, ::Integer? ]

    def id_will_change!: () -> void

    def id_was: () -> ::Integer?

    def id_previously_changed?: () -> bool

    def id_previous_change: () -> ::Array[::Integer?]?

    def id_previously_was: () -> ::Integer?

    def id_before_last_save: () -> ::Integer?

    def id_change_to_be_saved: () -> ::Array[::Integer?]?

    def id_in_database: () -> ::Integer?

    def saved_change_to_id: () -> ::Array[::Integer?]?

    def saved_change_to_id?: () -> bool

    def will_save_change_to_id?: () -> bool

    def restore_id!: () -> void

    def clear_id_change: () -> void

    def event_id: () -> ::Integer

    def event_id=: (::Integer) -> ::Integer

    def event_id?: () -> bool

    def event_id_changed?: () -> bool

    def event_id_change: () -> [ ::Integer?, ::Integer? ]

    def event_id_will_change!: () -> void

    def event_id_was: () -> ::Integer?

    def event_id_previously_changed?: () -> bool

    def event_id_previous_change: () -> ::Array[::Integer?]?

    def event_id_previously_was: () -> ::Integer?

    def event_id_before_last_save: () -> ::Integer?

    def event_id_change_to_be_saved: () -> ::Array[::Integer?]?

    def event_id_in_database: () -> ::Integer?

    def saved_change_to_event_id: () -> ::Array[::Integer?]?

    def saved_change_to_event_id?: () -> bool

    def will_save_change_to_event_id?: () -> bool

    def restore_event_id!: () -> void

    def clear_event_id_change: () -> void

    def status: () -> ::String

    def status=: (::String) -> ::String

    def status?: () -> bool

    def status_changed?: () -> bool

    def status_change: () -> [ ::String?, ::String? ]

    def status_will_change!: () -> void

    def status_was: () -> ::String?

    def status_previously_changed?: () -> bool

    def status_previous_change: () -> ::Array[::String?]?

    def status_previously_was: () -> ::String?

    def status_before_last_save: () -> ::String?

    def status_change_to_be_saved: () -> ::Array[::String?]?

    def status_in_database: () -> ::String?

    def saved_change_to_status: () -> ::Array[::String?]?

    def saved_change_to_status?: () -> bool

    def will_save_change_to_status?: () -> bool

    def restore_status!: () -> void

    def clear_status_change: () -> void

    def published_at: () -> ::ActiveSupport::TimeWithZone?

    def published_at=: (::ActiveSupport::TimeWithZone?) -> ::ActiveSupport::TimeWithZone?

    def published_at?: () -> bool

    def published_at_changed?: () -> bool

    def published_at_change: () -> [ ::ActiveSupport::TimeWithZone?, ::ActiveSupport::TimeWithZone? ]

    def published_at_will_change!: () -> void

    def published_at_was: () -> ::ActiveSupport::TimeWithZone?

    def published_at_previously_changed?: () -> bool

    def published_at_previous_change: () -> ::Array[::ActiveSupport::TimeWithZone?]?

    def published_at_previously_was: () -> ::ActiveSupport::TimeWithZone?

    def published_at_before_last_save: () -> ::ActiveSupport::TimeWithZone?

    def published_at_change_to_be_saved: () -> ::Array[::ActiveSupport::TimeWithZone?]?

    def published_at_in_database: () -> ::ActiveSupport::TimeWithZone?

    def saved_change_to_published_at: () -> ::Array[::ActiveSupport::TimeWithZone?]?

    def saved_change_to_published_at?: () -> bool

    def will_save_change_to_published_at?: () -> bool

    def restore_published_at!: () -> void

    def clear_published_at_change: () -> void

    def created_at: () -> ::ActiveSupport::TimeWithZone

    def created_at=: (::ActiveSupport::TimeWithZone) -> ::ActiveSupport::TimeWithZone

    def created_at?: () -> bool

    def created_at_changed?: () -> bool

    def created_at_change: () -> [ ::ActiveSupport::TimeWithZone?, ::ActiveSupport::TimeWithZone? ]

    def created_at_will_change!: () -> void

    def created_at_was: () -> ::ActiveSupport::TimeWithZone?

    def created_at_previously_changed?: () -> bool

    def created_at_previous_change: () -> ::Array[::ActiveSupport::TimeWithZone?]?

    def created_at_previously_was: () -> ::ActiveSupport::TimeWithZone?

    def created_at_before_last_save: () -> ::ActiveSupport::TimeWithZone?

    def created_at_change_to_be_saved: () -> ::Array[::ActiveSupport::TimeWithZone?]?

    def created_at_in_database: () -> ::ActiveSupport::TimeWithZone?

    def saved_change_to_created_at: () -> ::Array[::ActiveSupport::TimeWithZone?]?

    def saved_change_to_created_at?: () -> bool

    def will_save_change_to_created_at?: () -> bool

    def restore_created_at!: () -> void

    def clear_created_at_change: () -> void

    def updated_at: () -> ::ActiveSupport::TimeWithZone

    def updated_at=: (::ActiveSupport::TimeWithZone) -> ::ActiveSupport::TimeWithZone

    def updated_at?: () -> bool

    def updated_at_changed?: () -> bool

    def updated_at_change: () -> [ ::ActiveSupport::TimeWithZone?, ::ActiveSupport::TimeWithZone? ]

    def updated_at_will_change!: () -> void

    def updated_at_was: () -> ::ActiveSupport::TimeWithZone?

    def updated_at_previously_changed?: () -> bool

    def updated_at_previous_change: () -> ::Array[::ActiveSupport::TimeWithZone?]?

    def updated_at_previously_was: () -> ::ActiveSupport::TimeWithZone?

    def updated_at_before_last_save: () -> ::ActiveSupport::TimeWithZone?

    def updated_at_change_to_be_saved: () -> ::Array[::ActiveSupport::TimeWithZone?]?

    def updated_at_in_database: () -> ::ActiveSupport::TimeWithZone?

    def saved_change_to_updated_at: () -> ::Array[::ActiveSupport::TimeWithZone?]?

    def saved_change_to_updated_at?: () -> bool

    def will_save_change_to_updated_at?: () -> bool

    def restore_updated_at!: () -> void

    def clear_updated_at_change: () -> void

    def title: () -> ::String

    def title=: (::String) -> ::String

    def title?: () -> bool

    def title_changed?: () -> bool

    def title_change: () -> [ ::String?, ::String? ]

    def title_will_change!: () -> void

    def title_was: () -> ::String?

    def title_previously_changed?: () -> bool

    def title_previous_change: () -> ::Array[::String?]?

    def title_previously_was: () -> ::String?

    def title_before_last_save: () -> ::String?

    def title_change_to_be_saved: () -> ::Array[::String?]?

    def title_in_database: () -> ::String?

    def saved_change_to_title: () -> ::Array[::String?]?

    def saved_change_to_title?: () -> bool

    def will_save_change_to_title?: () -> bool

    def restore_title!: () -> void

    def clear_title_change: () -> void
  end
  include GeneratedAttributeMethods

  def rich_text_content: () -> ::ActionText::RichText?
  def rich_text_content=: (::ActionText::RichText?) -> ::ActionText::RichText?
  def build_rich_text_content: (?untyped) -> ::ActionText::RichText
  def create_rich_text_content: (untyped) -> ::ActionText::RichText
  def create_rich_text_content!: (untyped) -> ::ActionText::RichText
  def reload_rich_text_content: () -> ::ActionText::RichText?
  def event: () -> ::Event
  def event=: (::Event?) -> ::Event?
  def reload_event: () -> ::Event?
  def build_event: (untyped) -> ::Event
  def create_event: (untyped) -> ::Event
  def create_event!: (untyped) -> ::Event
  module GeneratedAssociationMethods
  end
  include GeneratedAssociationMethods

  module GeneratedRelationMethods
  end

  class ActiveRecord_Relation < ::ActiveRecord::Relation
    include ::Announcement::GeneratedRelationMethods
    include ::_ActiveRecord_Relation[::Announcement, ::Integer]
    include ::Enumerable[::Announcement]
  end

  class ActiveRecord_Associations_CollectionProxy < ::ActiveRecord::Associations::CollectionProxy
    include ::Announcement::GeneratedRelationMethods
    include ::_ActiveRecord_Relation[::Announcement, ::Integer]
  end
end
