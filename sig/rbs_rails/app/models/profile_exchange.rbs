class ProfileExchange < ::ApplicationRecord
  extend ::_ActiveRecord_Relation_ClassMethods[::ProfileExchange, ::ProfileExchange::ActiveRecord_Relation, ::Integer]

  module GeneratedAttributeMethods
    def id: () -> ::Integer

    def id=: (::Integer) -> ::Integer

    def id?: () -> bool

    def id_changed?: () -> bool

    def id_change: () -> [ ::Integer?, ::Integer? ]

    def id_will_change!: () -> void

    def id_was: () -> ::Integer?

    def id_previously_changed?: () -> bool

    def id_previous_change: () -> ::Array[::Integer?]?

    def id_previously_was: () -> ::Integer?

    def id_before_last_save: () -> ::Integer?

    def id_change_to_be_saved: () -> ::Array[::Integer?]?

    def id_in_database: () -> ::Integer?

    def saved_change_to_id: () -> ::Array[::Integer?]?

    def saved_change_to_id?: () -> bool

    def will_save_change_to_id?: () -> bool

    def restore_id!: () -> void

    def clear_id_change: () -> void

    def event_id: () -> ::Integer

    def event_id=: (::Integer) -> ::Integer

    def event_id?: () -> bool

    def event_id_changed?: () -> bool

    def event_id_change: () -> [ ::Integer?, ::Integer? ]

    def event_id_will_change!: () -> void

    def event_id_was: () -> ::Integer?

    def event_id_previously_changed?: () -> bool

    def event_id_previous_change: () -> ::Array[::Integer?]?

    def event_id_previously_was: () -> ::Integer?

    def event_id_before_last_save: () -> ::Integer?

    def event_id_change_to_be_saved: () -> ::Array[::Integer?]?

    def event_id_in_database: () -> ::Integer?

    def saved_change_to_event_id: () -> ::Array[::Integer?]?

    def saved_change_to_event_id?: () -> bool

    def will_save_change_to_event_id?: () -> bool

    def restore_event_id!: () -> void

    def clear_event_id_change: () -> void

    def user_id: () -> ::Integer

    def user_id=: (::Integer) -> ::Integer

    def user_id?: () -> bool

    def user_id_changed?: () -> bool

    def user_id_change: () -> [ ::Integer?, ::Integer? ]

    def user_id_will_change!: () -> void

    def user_id_was: () -> ::Integer?

    def user_id_previously_changed?: () -> bool

    def user_id_previous_change: () -> ::Array[::Integer?]?

    def user_id_previously_was: () -> ::Integer?

    def user_id_before_last_save: () -> ::Integer?

    def user_id_change_to_be_saved: () -> ::Array[::Integer?]?

    def user_id_in_database: () -> ::Integer?

    def saved_change_to_user_id: () -> ::Array[::Integer?]?

    def saved_change_to_user_id?: () -> bool

    def will_save_change_to_user_id?: () -> bool

    def restore_user_id!: () -> void

    def clear_user_id_change: () -> void

    def friend_id: () -> ::Integer

    def friend_id=: (::Integer) -> ::Integer

    def friend_id?: () -> bool

    def friend_id_changed?: () -> bool

    def friend_id_change: () -> [ ::Integer?, ::Integer? ]

    def friend_id_will_change!: () -> void

    def friend_id_was: () -> ::Integer?

    def friend_id_previously_changed?: () -> bool

    def friend_id_previous_change: () -> ::Array[::Integer?]?

    def friend_id_previously_was: () -> ::Integer?

    def friend_id_before_last_save: () -> ::Integer?

    def friend_id_change_to_be_saved: () -> ::Array[::Integer?]?

    def friend_id_in_database: () -> ::Integer?

    def saved_change_to_friend_id: () -> ::Array[::Integer?]?

    def saved_change_to_friend_id?: () -> bool

    def will_save_change_to_friend_id?: () -> bool

    def restore_friend_id!: () -> void

    def clear_friend_id_change: () -> void

    def created_at: () -> ::ActiveSupport::TimeWithZone

    def created_at=: (::ActiveSupport::TimeWithZone) -> ::ActiveSupport::TimeWithZone

    def created_at?: () -> bool

    def created_at_changed?: () -> bool

    def created_at_change: () -> [ ::ActiveSupport::TimeWithZone?, ::ActiveSupport::TimeWithZone? ]

    def created_at_will_change!: () -> void

    def created_at_was: () -> ::ActiveSupport::TimeWithZone?

    def created_at_previously_changed?: () -> bool

    def created_at_previous_change: () -> ::Array[::ActiveSupport::TimeWithZone?]?

    def created_at_previously_was: () -> ::ActiveSupport::TimeWithZone?

    def created_at_before_last_save: () -> ::ActiveSupport::TimeWithZone?

    def created_at_change_to_be_saved: () -> ::Array[::ActiveSupport::TimeWithZone?]?

    def created_at_in_database: () -> ::ActiveSupport::TimeWithZone?

    def saved_change_to_created_at: () -> ::Array[::ActiveSupport::TimeWithZone?]?

    def saved_change_to_created_at?: () -> bool

    def will_save_change_to_created_at?: () -> bool

    def restore_created_at!: () -> void

    def clear_created_at_change: () -> void

    def updated_at: () -> ::ActiveSupport::TimeWithZone

    def updated_at=: (::ActiveSupport::TimeWithZone) -> ::ActiveSupport::TimeWithZone

    def updated_at?: () -> bool

    def updated_at_changed?: () -> bool

    def updated_at_change: () -> [ ::ActiveSupport::TimeWithZone?, ::ActiveSupport::TimeWithZone? ]

    def updated_at_will_change!: () -> void

    def updated_at_was: () -> ::ActiveSupport::TimeWithZone?

    def updated_at_previously_changed?: () -> bool

    def updated_at_previous_change: () -> ::Array[::ActiveSupport::TimeWithZone?]?

    def updated_at_previously_was: () -> ::ActiveSupport::TimeWithZone?

    def updated_at_before_last_save: () -> ::ActiveSupport::TimeWithZone?

    def updated_at_change_to_be_saved: () -> ::Array[::ActiveSupport::TimeWithZone?]?

    def updated_at_in_database: () -> ::ActiveSupport::TimeWithZone?

    def saved_change_to_updated_at: () -> ::Array[::ActiveSupport::TimeWithZone?]?

    def saved_change_to_updated_at?: () -> bool

    def will_save_change_to_updated_at?: () -> bool

    def restore_updated_at!: () -> void

    def clear_updated_at_change: () -> void
  end
  include GeneratedAttributeMethods

  def event: () -> ::Event
  def event=: (::Event?) -> ::Event?
  def reload_event: () -> ::Event?
  def build_event: (untyped) -> ::Event
  def create_event: (untyped) -> ::Event
  def create_event!: (untyped) -> ::Event
  def user: () -> ::User
  def user=: (::User?) -> ::User?
  def reload_user: () -> ::User?
  def build_user: (untyped) -> ::User
  def create_user: (untyped) -> ::User
  def create_user!: (untyped) -> ::User
  def friend: () -> ::User
  def friend=: (::User?) -> ::User?
  def reload_friend: () -> ::User?
  def build_friend: (untyped) -> ::User
  def create_friend: (untyped) -> ::User
  def create_friend!: (untyped) -> ::User
  module GeneratedAssociationMethods
  end
  include GeneratedAssociationMethods

  module GeneratedRelationMethods
  end

  class ActiveRecord_Relation < ::ActiveRecord::Relation
    include ::ProfileExchange::GeneratedRelationMethods
    include ::_ActiveRecord_Relation[::ProfileExchange, ::Integer]
    include ::Enumerable[::ProfileExchange]
  end

  class ActiveRecord_Associations_CollectionProxy < ::ActiveRecord::Associations::CollectionProxy
    include ::ProfileExchange::GeneratedRelationMethods
    include ::_ActiveRecord_Relation[::ProfileExchange, ::Integer]
  end
end
