module ActionText
  class RichText < ::ActionText::Record
    extend ::_ActiveRecord_Relation_ClassMethods[::ActionText::RichText, ::ActionText::RichText::ActiveRecord_Relation, ::Integer]

    module GeneratedAttributeMethods
      def id: () -> ::Integer

      def id=: (::Integer) -> ::Integer

      def id?: () -> bool

      def id_changed?: () -> bool

      def id_change: () -> [ ::Integer?, ::Integer? ]

      def id_will_change!: () -> void

      def id_was: () -> ::Integer?

      def id_previously_changed?: () -> bool

      def id_previous_change: () -> ::Array[::Integer?]?

      def id_previously_was: () -> ::Integer?

      def id_before_last_save: () -> ::Integer?

      def id_change_to_be_saved: () -> ::Array[::Integer?]?

      def id_in_database: () -> ::Integer?

      def saved_change_to_id: () -> ::Array[::Integer?]?

      def saved_change_to_id?: () -> bool

      def will_save_change_to_id?: () -> bool

      def restore_id!: () -> void

      def clear_id_change: () -> void

      def name: () -> ::String

      def name=: (::String) -> ::String

      def name?: () -> bool

      def name_changed?: () -> bool

      def name_change: () -> [ ::String?, ::String? ]

      def name_will_change!: () -> void

      def name_was: () -> ::String?

      def name_previously_changed?: () -> bool

      def name_previous_change: () -> ::Array[::String?]?

      def name_previously_was: () -> ::String?

      def name_before_last_save: () -> ::String?

      def name_change_to_be_saved: () -> ::Array[::String?]?

      def name_in_database: () -> ::String?

      def saved_change_to_name: () -> ::Array[::String?]?

      def saved_change_to_name?: () -> bool

      def will_save_change_to_name?: () -> bool

      def restore_name!: () -> void

      def clear_name_change: () -> void

      def body: () -> ::String?

      def body=: (::String?) -> ::String?

      def body?: () -> bool

      def body_changed?: () -> bool

      def body_change: () -> [ ::String?, ::String? ]

      def body_will_change!: () -> void

      def body_was: () -> ::String?

      def body_previously_changed?: () -> bool

      def body_previous_change: () -> ::Array[::String?]?

      def body_previously_was: () -> ::String?

      def body_before_last_save: () -> ::String?

      def body_change_to_be_saved: () -> ::Array[::String?]?

      def body_in_database: () -> ::String?

      def saved_change_to_body: () -> ::Array[::String?]?

      def saved_change_to_body?: () -> bool

      def will_save_change_to_body?: () -> bool

      def restore_body!: () -> void

      def clear_body_change: () -> void

      def record_type: () -> ::String

      def record_type=: (::String) -> ::String

      def record_type?: () -> bool

      def record_type_changed?: () -> bool

      def record_type_change: () -> [ ::String?, ::String? ]

      def record_type_will_change!: () -> void

      def record_type_was: () -> ::String?

      def record_type_previously_changed?: () -> bool

      def record_type_previous_change: () -> ::Array[::String?]?

      def record_type_previously_was: () -> ::String?

      def record_type_before_last_save: () -> ::String?

      def record_type_change_to_be_saved: () -> ::Array[::String?]?

      def record_type_in_database: () -> ::String?

      def saved_change_to_record_type: () -> ::Array[::String?]?

      def saved_change_to_record_type?: () -> bool

      def will_save_change_to_record_type?: () -> bool

      def restore_record_type!: () -> void

      def clear_record_type_change: () -> void

      def record_id: () -> ::Integer

      def record_id=: (::Integer) -> ::Integer

      def record_id?: () -> bool

      def record_id_changed?: () -> bool

      def record_id_change: () -> [ ::Integer?, ::Integer? ]

      def record_id_will_change!: () -> void

      def record_id_was: () -> ::Integer?

      def record_id_previously_changed?: () -> bool

      def record_id_previous_change: () -> ::Array[::Integer?]?

      def record_id_previously_was: () -> ::Integer?

      def record_id_before_last_save: () -> ::Integer?

      def record_id_change_to_be_saved: () -> ::Array[::Integer?]?

      def record_id_in_database: () -> ::Integer?

      def saved_change_to_record_id: () -> ::Array[::Integer?]?

      def saved_change_to_record_id?: () -> bool

      def will_save_change_to_record_id?: () -> bool

      def restore_record_id!: () -> void

      def clear_record_id_change: () -> void

      def created_at: () -> ::ActiveSupport::TimeWithZone

      def created_at=: (::ActiveSupport::TimeWithZone) -> ::ActiveSupport::TimeWithZone

      def created_at?: () -> bool

      def created_at_changed?: () -> bool

      def created_at_change: () -> [ ::ActiveSupport::TimeWithZone?, ::ActiveSupport::TimeWithZone? ]

      def created_at_will_change!: () -> void

      def created_at_was: () -> ::ActiveSupport::TimeWithZone?

      def created_at_previously_changed?: () -> bool

      def created_at_previous_change: () -> ::Array[::ActiveSupport::TimeWithZone?]?

      def created_at_previously_was: () -> ::ActiveSupport::TimeWithZone?

      def created_at_before_last_save: () -> ::ActiveSupport::TimeWithZone?

      def created_at_change_to_be_saved: () -> ::Array[::ActiveSupport::TimeWithZone?]?

      def created_at_in_database: () -> ::ActiveSupport::TimeWithZone?

      def saved_change_to_created_at: () -> ::Array[::ActiveSupport::TimeWithZone?]?

      def saved_change_to_created_at?: () -> bool

      def will_save_change_to_created_at?: () -> bool

      def restore_created_at!: () -> void

      def clear_created_at_change: () -> void

      def updated_at: () -> ::ActiveSupport::TimeWithZone

      def updated_at=: (::ActiveSupport::TimeWithZone) -> ::ActiveSupport::TimeWithZone

      def updated_at?: () -> bool

      def updated_at_changed?: () -> bool

      def updated_at_change: () -> [ ::ActiveSupport::TimeWithZone?, ::ActiveSupport::TimeWithZone? ]

      def updated_at_will_change!: () -> void

      def updated_at_was: () -> ::ActiveSupport::TimeWithZone?

      def updated_at_previously_changed?: () -> bool

      def updated_at_previous_change: () -> ::Array[::ActiveSupport::TimeWithZone?]?

      def updated_at_previously_was: () -> ::ActiveSupport::TimeWithZone?

      def updated_at_before_last_save: () -> ::ActiveSupport::TimeWithZone?

      def updated_at_change_to_be_saved: () -> ::Array[::ActiveSupport::TimeWithZone?]?

      def updated_at_in_database: () -> ::ActiveSupport::TimeWithZone?

      def saved_change_to_updated_at: () -> ::Array[::ActiveSupport::TimeWithZone?]?

      def saved_change_to_updated_at?: () -> bool

      def will_save_change_to_updated_at?: () -> bool

      def restore_updated_at!: () -> void

      def clear_updated_at_change: () -> void
    end
    include GeneratedAttributeMethods
    def embeds_attachments: () -> ::ActiveStorage::Attachment::ActiveRecord_Associations_CollectionProxy
    def embeds_attachments=: (::ActiveStorage::Attachment::ActiveRecord_Associations_CollectionProxy | ::Array[::ActiveStorage::Attachment]) -> (::ActiveStorage::Attachment::ActiveRecord_Associations_CollectionProxy | ::Array[::ActiveStorage::Attachment])
    def embeds_attachment_ids: () -> ::Array[::Integer]
    def embeds_attachment_ids=: (::Array[::Integer]) -> ::Array[::Integer]
    def embeds_blobs: () -> ::ActiveStorage::Blob::ActiveRecord_Associations_CollectionProxy
    def embeds_blobs=: (::ActiveStorage::Blob::ActiveRecord_Associations_CollectionProxy | ::Array[::ActiveStorage::Blob]) -> (::ActiveStorage::Blob::ActiveRecord_Associations_CollectionProxy | ::Array[::ActiveStorage::Blob])
    def embeds_blob_ids: () -> ::Array[::Integer]
    def embeds_blob_ids=: (::Array[::Integer]) -> ::Array[::Integer]

    def record: () -> untyped
    def record=: (untyped?) -> untyped?
    def reload_record: () -> untyped?
    module GeneratedAssociationMethods
      def embeds: () -> ::ActiveStorage::Attached::Many

      def embeds=: (untyped) -> untyped
    end
    include GeneratedAssociationMethods

    module GeneratedRelationMethods
    end

    class ActiveRecord_Relation < ::ActiveRecord::Relation
      include ::ActionText::RichText::GeneratedRelationMethods
      include ::_ActiveRecord_Relation[::ActionText::RichText, ::Integer]
      include ::Enumerable[::ActionText::RichText]
    end

    class ActiveRecord_Associations_CollectionProxy < ::ActiveRecord::Associations::CollectionProxy
      include ::ActionText::RichText::GeneratedRelationMethods
      include ::_ActiveRecord_Relation[::ActionText::RichText, ::Integer]
    end
  end
end
