class Speaker < ::ApplicationRecord
  extend ::_ActiveRecord_Relation_ClassMethods[::Speaker, ::Speaker::ActiveRecord_Relation, ::Integer]

  module GeneratedAttributeMethods
    def id: () -> ::Integer

    def id=: (::Integer) -> ::Integer

    def id?: () -> bool

    def id_changed?: () -> bool

    def id_change: () -> [ ::Integer?, ::Integer? ]

    def id_will_change!: () -> void

    def id_was: () -> ::Integer?

    def id_previously_changed?: () -> bool

    def id_previous_change: () -> ::Array[::Integer?]?

    def id_previously_was: () -> ::Integer?

    def id_before_last_save: () -> ::Integer?

    def id_change_to_be_saved: () -> ::Array[::Integer?]?

    def id_in_database: () -> ::Integer?

    def saved_change_to_id: () -> ::Array[::Integer?]?

    def saved_change_to_id?: () -> bool

    def will_save_change_to_id?: () -> bool

    def restore_id!: () -> void

    def clear_id_change: () -> void

    def name: () -> ::String

    def name=: (::String) -> ::String

    def name?: () -> bool

    def name_changed?: () -> bool

    def name_change: () -> [ ::String?, ::String? ]

    def name_will_change!: () -> void

    def name_was: () -> ::String?

    def name_previously_changed?: () -> bool

    def name_previous_change: () -> ::Array[::String?]?

    def name_previously_was: () -> ::String?

    def name_before_last_save: () -> ::String?

    def name_change_to_be_saved: () -> ::Array[::String?]?

    def name_in_database: () -> ::String?

    def saved_change_to_name: () -> ::Array[::String?]?

    def saved_change_to_name?: () -> bool

    def will_save_change_to_name?: () -> bool

    def restore_name!: () -> void

    def clear_name_change: () -> void

    def slug: () -> ::String

    def slug=: (::String) -> ::String

    def slug?: () -> bool

    def slug_changed?: () -> bool

    def slug_change: () -> [ ::String?, ::String? ]

    def slug_will_change!: () -> void

    def slug_was: () -> ::String?

    def slug_previously_changed?: () -> bool

    def slug_previous_change: () -> ::Array[::String?]?

    def slug_previously_was: () -> ::String?

    def slug_before_last_save: () -> ::String?

    def slug_change_to_be_saved: () -> ::Array[::String?]?

    def slug_in_database: () -> ::String?

    def saved_change_to_slug: () -> ::Array[::String?]?

    def saved_change_to_slug?: () -> bool

    def will_save_change_to_slug?: () -> bool

    def restore_slug!: () -> void

    def clear_slug_change: () -> void

    def github_username: () -> ::String

    def github_username=: (::String) -> ::String

    def github_username?: () -> bool

    def github_username_changed?: () -> bool

    def github_username_change: () -> [ ::String?, ::String? ]

    def github_username_will_change!: () -> void

    def github_username_was: () -> ::String?

    def github_username_previously_changed?: () -> bool

    def github_username_previous_change: () -> ::Array[::String?]?

    def github_username_previously_was: () -> ::String?

    def github_username_before_last_save: () -> ::String?

    def github_username_change_to_be_saved: () -> ::Array[::String?]?

    def github_username_in_database: () -> ::String?

    def saved_change_to_github_username: () -> ::Array[::String?]?

    def saved_change_to_github_username?: () -> bool

    def will_save_change_to_github_username?: () -> bool

    def restore_github_username!: () -> void

    def clear_github_username_change: () -> void

    def gravatar_hash: () -> ::String?

    def gravatar_hash=: (::String?) -> ::String?

    def gravatar_hash?: () -> bool

    def gravatar_hash_changed?: () -> bool

    def gravatar_hash_change: () -> [ ::String?, ::String? ]

    def gravatar_hash_will_change!: () -> void

    def gravatar_hash_was: () -> ::String?

    def gravatar_hash_previously_changed?: () -> bool

    def gravatar_hash_previous_change: () -> ::Array[::String?]?

    def gravatar_hash_previously_was: () -> ::String?

    def gravatar_hash_before_last_save: () -> ::String?

    def gravatar_hash_change_to_be_saved: () -> ::Array[::String?]?

    def gravatar_hash_in_database: () -> ::String?

    def saved_change_to_gravatar_hash: () -> ::Array[::String?]?

    def saved_change_to_gravatar_hash?: () -> bool

    def will_save_change_to_gravatar_hash?: () -> bool

    def restore_gravatar_hash!: () -> void

    def clear_gravatar_hash_change: () -> void

    def bio: () -> ::String

    def bio=: (::String) -> ::String

    def bio?: () -> bool

    def bio_changed?: () -> bool

    def bio_change: () -> [ ::String?, ::String? ]

    def bio_will_change!: () -> void

    def bio_was: () -> ::String?

    def bio_previously_changed?: () -> bool

    def bio_previous_change: () -> ::Array[::String?]?

    def bio_previously_was: () -> ::String?

    def bio_before_last_save: () -> ::String?

    def bio_change_to_be_saved: () -> ::Array[::String?]?

    def bio_in_database: () -> ::String?

    def saved_change_to_bio: () -> ::Array[::String?]?

    def saved_change_to_bio?: () -> bool

    def will_save_change_to_bio?: () -> bool

    def restore_bio!: () -> void

    def clear_bio_change: () -> void

    def created_at: () -> ::ActiveSupport::TimeWithZone

    def created_at=: (::ActiveSupport::TimeWithZone) -> ::ActiveSupport::TimeWithZone

    def created_at?: () -> bool

    def created_at_changed?: () -> bool

    def created_at_change: () -> [ ::ActiveSupport::TimeWithZone?, ::ActiveSupport::TimeWithZone? ]

    def created_at_will_change!: () -> void

    def created_at_was: () -> ::ActiveSupport::TimeWithZone?

    def created_at_previously_changed?: () -> bool

    def created_at_previous_change: () -> ::Array[::ActiveSupport::TimeWithZone?]?

    def created_at_previously_was: () -> ::ActiveSupport::TimeWithZone?

    def created_at_before_last_save: () -> ::ActiveSupport::TimeWithZone?

    def created_at_change_to_be_saved: () -> ::Array[::ActiveSupport::TimeWithZone?]?

    def created_at_in_database: () -> ::ActiveSupport::TimeWithZone?

    def saved_change_to_created_at: () -> ::Array[::ActiveSupport::TimeWithZone?]?

    def saved_change_to_created_at?: () -> bool

    def will_save_change_to_created_at?: () -> bool

    def restore_created_at!: () -> void

    def clear_created_at_change: () -> void

    def updated_at: () -> ::ActiveSupport::TimeWithZone

    def updated_at=: (::ActiveSupport::TimeWithZone) -> ::ActiveSupport::TimeWithZone

    def updated_at?: () -> bool

    def updated_at_changed?: () -> bool

    def updated_at_change: () -> [ ::ActiveSupport::TimeWithZone?, ::ActiveSupport::TimeWithZone? ]

    def updated_at_will_change!: () -> void

    def updated_at_was: () -> ::ActiveSupport::TimeWithZone?

    def updated_at_previously_changed?: () -> bool

    def updated_at_previous_change: () -> ::Array[::ActiveSupport::TimeWithZone?]?

    def updated_at_previously_was: () -> ::ActiveSupport::TimeWithZone?

    def updated_at_before_last_save: () -> ::ActiveSupport::TimeWithZone?

    def updated_at_change_to_be_saved: () -> ::Array[::ActiveSupport::TimeWithZone?]?

    def updated_at_in_database: () -> ::ActiveSupport::TimeWithZone?

    def saved_change_to_updated_at: () -> ::Array[::ActiveSupport::TimeWithZone?]?

    def saved_change_to_updated_at?: () -> bool

    def will_save_change_to_updated_at?: () -> bool

    def restore_updated_at!: () -> void

    def clear_updated_at_change: () -> void
  end
  include GeneratedAttributeMethods
  def speakers_talks: () -> ::SpeakersTalk::ActiveRecord_Associations_CollectionProxy
  def speakers_talks=: (::SpeakersTalk::ActiveRecord_Associations_CollectionProxy | ::Array[::SpeakersTalk]) -> (::SpeakersTalk::ActiveRecord_Associations_CollectionProxy | ::Array[::SpeakersTalk])
  def speakers_talk_ids: () -> ::Array[::Integer]
  def speakers_talk_ids=: (::Array[::Integer]) -> ::Array[::Integer]
  def talks: () -> ::Talk::ActiveRecord_Associations_CollectionProxy
  def talks=: (::Talk::ActiveRecord_Associations_CollectionProxy | ::Array[::Talk]) -> (::Talk::ActiveRecord_Associations_CollectionProxy | ::Array[::Talk])
  def talk_ids: () -> ::Array[::Integer]
  def talk_ids=: (::Array[::Integer]) -> ::Array[::Integer]
  def avatar_attachment: () -> ::ActiveStorage::Attachment?
  def avatar_attachment=: (::ActiveStorage::Attachment?) -> ::ActiveStorage::Attachment?
  def build_avatar_attachment: (?untyped) -> ::ActiveStorage::Attachment
  def create_avatar_attachment: (untyped) -> ::ActiveStorage::Attachment
  def create_avatar_attachment!: (untyped) -> ::ActiveStorage::Attachment
  def reload_avatar_attachment: () -> ::ActiveStorage::Attachment?
  def avatar_blob: () -> ::ActiveStorage::Blob?
  def avatar_blob=: (::ActiveStorage::Blob?) -> ::ActiveStorage::Blob?
  def build_avatar_blob: (?untyped) -> ::ActiveStorage::Blob
  def create_avatar_blob: (untyped) -> ::ActiveStorage::Blob
  def create_avatar_blob!: (untyped) -> ::ActiveStorage::Blob
  def reload_avatar_blob: () -> ::ActiveStorage::Blob?

  module GeneratedAssociationMethods
    def avatar: () -> ::ActiveStorage::Attached::One

    def avatar=: (::ActionDispatch::Http::UploadedFile) -> ::ActionDispatch::Http::UploadedFile
               | (::Rack::Test::UploadedFile) -> ::Rack::Test::UploadedFile
               | (::ActiveStorage::Blob) -> ::ActiveStorage::Blob
               | (::String) -> ::String
               | ({ io: ::IO, filename: ::String, content_type: ::String? }) -> { io: ::IO, filename: ::String, content_type: ::String? }
               | (nil) -> nil
  end
  include GeneratedAssociationMethods

  def self.with_attached_avatar: () -> ::Speaker::ActiveRecord_Relation

  module GeneratedRelationMethods
    def with_attached_avatar: () -> ::Speaker::ActiveRecord_Relation
  end

  class ActiveRecord_Relation < ::ActiveRecord::Relation
    include ::Speaker::GeneratedRelationMethods
    include ::_ActiveRecord_Relation[::Speaker, ::Integer]
    include ::Enumerable[::Speaker]
  end

  class ActiveRecord_Associations_CollectionProxy < ::ActiveRecord::Associations::CollectionProxy
    include ::Speaker::GeneratedRelationMethods
    include ::_ActiveRecord_Relation[::Speaker, ::Integer]
  end
end
