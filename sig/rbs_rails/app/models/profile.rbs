class Profile < ::ApplicationRecord
  extend ::_ActiveRecord_Relation_ClassMethods[::Profile, ::Profile::ActiveRecord_Relation, ::Integer]

  module GeneratedAttributeMethods
    def id: () -> ::Integer

    def id=: (::Integer) -> ::Integer

    def id?: () -> bool

    def id_changed?: () -> bool

    def id_change: () -> [ ::Integer?, ::Integer? ]

    def id_will_change!: () -> void

    def id_was: () -> ::Integer?

    def id_previously_changed?: () -> bool

    def id_previous_change: () -> ::Array[::Integer?]?

    def id_previously_was: () -> ::Integer?

    def id_before_last_save: () -> ::Integer?

    def id_change_to_be_saved: () -> ::Array[::Integer?]?

    def id_in_database: () -> ::Integer?

    def saved_change_to_id: () -> ::Array[::Integer?]?

    def saved_change_to_id?: () -> bool

    def will_save_change_to_id?: () -> bool

    def restore_id!: () -> void

    def clear_id_change: () -> void

    def user_id: () -> ::Integer

    def user_id=: (::Integer) -> ::Integer

    def user_id?: () -> bool

    def user_id_changed?: () -> bool

    def user_id_change: () -> [ ::Integer?, ::Integer? ]

    def user_id_will_change!: () -> void

    def user_id_was: () -> ::Integer?

    def user_id_previously_changed?: () -> bool

    def user_id_previous_change: () -> ::Array[::Integer?]?

    def user_id_previously_was: () -> ::Integer?

    def user_id_before_last_save: () -> ::Integer?

    def user_id_change_to_be_saved: () -> ::Array[::Integer?]?

    def user_id_in_database: () -> ::Integer?

    def saved_change_to_user_id: () -> ::Array[::Integer?]?

    def saved_change_to_user_id?: () -> bool

    def will_save_change_to_user_id?: () -> bool

    def restore_user_id!: () -> void

    def clear_user_id_change: () -> void

    def name: () -> ::String

    def name=: (::String) -> ::String

    def name?: () -> bool

    def name_changed?: () -> bool

    def name_change: () -> [ ::String?, ::String? ]

    def name_will_change!: () -> void

    def name_was: () -> ::String?

    def name_previously_changed?: () -> bool

    def name_previous_change: () -> ::Array[::String?]?

    def name_previously_was: () -> ::String?

    def name_before_last_save: () -> ::String?

    def name_change_to_be_saved: () -> ::Array[::String?]?

    def name_in_database: () -> ::String?

    def saved_change_to_name: () -> ::Array[::String?]?

    def saved_change_to_name?: () -> bool

    def will_save_change_to_name?: () -> bool

    def restore_name!: () -> void

    def clear_name_change: () -> void

    def description: () -> ::String

    def description=: (::String) -> ::String

    def description?: () -> bool

    def description_changed?: () -> bool

    def description_change: () -> [ ::String?, ::String? ]

    def description_will_change!: () -> void

    def description_was: () -> ::String?

    def description_previously_changed?: () -> bool

    def description_previous_change: () -> ::Array[::String?]?

    def description_previously_was: () -> ::String?

    def description_before_last_save: () -> ::String?

    def description_change_to_be_saved: () -> ::Array[::String?]?

    def description_in_database: () -> ::String?

    def saved_change_to_description: () -> ::Array[::String?]?

    def saved_change_to_description?: () -> bool

    def will_save_change_to_description?: () -> bool

    def restore_description!: () -> void

    def clear_description_change: () -> void

    def created_at: () -> ::ActiveSupport::TimeWithZone

    def created_at=: (::ActiveSupport::TimeWithZone) -> ::ActiveSupport::TimeWithZone

    def created_at?: () -> bool

    def created_at_changed?: () -> bool

    def created_at_change: () -> [ ::ActiveSupport::TimeWithZone?, ::ActiveSupport::TimeWithZone? ]

    def created_at_will_change!: () -> void

    def created_at_was: () -> ::ActiveSupport::TimeWithZone?

    def created_at_previously_changed?: () -> bool

    def created_at_previous_change: () -> ::Array[::ActiveSupport::TimeWithZone?]?

    def created_at_previously_was: () -> ::ActiveSupport::TimeWithZone?

    def created_at_before_last_save: () -> ::ActiveSupport::TimeWithZone?

    def created_at_change_to_be_saved: () -> ::Array[::ActiveSupport::TimeWithZone?]?

    def created_at_in_database: () -> ::ActiveSupport::TimeWithZone?

    def saved_change_to_created_at: () -> ::Array[::ActiveSupport::TimeWithZone?]?

    def saved_change_to_created_at?: () -> bool

    def will_save_change_to_created_at?: () -> bool

    def restore_created_at!: () -> void

    def clear_created_at_change: () -> void

    def updated_at: () -> ::ActiveSupport::TimeWithZone

    def updated_at=: (::ActiveSupport::TimeWithZone) -> ::ActiveSupport::TimeWithZone

    def updated_at?: () -> bool

    def updated_at_changed?: () -> bool

    def updated_at_change: () -> [ ::ActiveSupport::TimeWithZone?, ::ActiveSupport::TimeWithZone? ]

    def updated_at_will_change!: () -> void

    def updated_at_was: () -> ::ActiveSupport::TimeWithZone?

    def updated_at_previously_changed?: () -> bool

    def updated_at_previous_change: () -> ::Array[::ActiveSupport::TimeWithZone?]?

    def updated_at_previously_was: () -> ::ActiveSupport::TimeWithZone?

    def updated_at_before_last_save: () -> ::ActiveSupport::TimeWithZone?

    def updated_at_change_to_be_saved: () -> ::Array[::ActiveSupport::TimeWithZone?]?

    def updated_at_in_database: () -> ::ActiveSupport::TimeWithZone?

    def saved_change_to_updated_at: () -> ::Array[::ActiveSupport::TimeWithZone?]?

    def saved_change_to_updated_at?: () -> bool

    def will_save_change_to_updated_at?: () -> bool

    def restore_updated_at!: () -> void

    def clear_updated_at_change: () -> void
  end
  include GeneratedAttributeMethods
  def profile_badges_profiles: () -> ::ProfileBadgesProfile::ActiveRecord_Associations_CollectionProxy
  def profile_badges_profiles=: (::ProfileBadgesProfile::ActiveRecord_Associations_CollectionProxy | ::Array[::ProfileBadgesProfile]) -> (::ProfileBadgesProfile::ActiveRecord_Associations_CollectionProxy | ::Array[::ProfileBadgesProfile])
  def profile_badges_profile_ids: () -> ::Array[::Integer]
  def profile_badges_profile_ids=: (::Array[::Integer]) -> ::Array[::Integer]
  def profile_badges: () -> ::ProfileBadge::ActiveRecord_Associations_CollectionProxy
  def profile_badges=: (::ProfileBadge::ActiveRecord_Associations_CollectionProxy | ::Array[::ProfileBadge]) -> (::ProfileBadge::ActiveRecord_Associations_CollectionProxy | ::Array[::ProfileBadge])
  def profile_badge_ids: () -> ::Array[::Integer]
  def profile_badge_ids=: (::Array[::Integer]) -> ::Array[::Integer]
  def images_attachments: () -> ::ActiveStorage::Attachment::ActiveRecord_Associations_CollectionProxy
  def images_attachments=: (::ActiveStorage::Attachment::ActiveRecord_Associations_CollectionProxy | ::Array[::ActiveStorage::Attachment]) -> (::ActiveStorage::Attachment::ActiveRecord_Associations_CollectionProxy | ::Array[::ActiveStorage::Attachment])
  def images_attachment_ids: () -> ::Array[::Integer]
  def images_attachment_ids=: (::Array[::Integer]) -> ::Array[::Integer]
  def images_blobs: () -> ::ActiveStorage::Blob::ActiveRecord_Associations_CollectionProxy
  def images_blobs=: (::ActiveStorage::Blob::ActiveRecord_Associations_CollectionProxy | ::Array[::ActiveStorage::Blob]) -> (::ActiveStorage::Blob::ActiveRecord_Associations_CollectionProxy | ::Array[::ActiveStorage::Blob])
  def images_blob_ids: () -> ::Array[::Integer]
  def images_blob_ids=: (::Array[::Integer]) -> ::Array[::Integer]

  def user: () -> ::User
  def user=: (::User?) -> ::User?
  def reload_user: () -> ::User?
  def build_user: (untyped) -> ::User
  def create_user: (untyped) -> ::User
  def create_user!: (untyped) -> ::User
  module GeneratedAssociationMethods
    def images: () -> ::ActiveStorage::Attached::Many

    def images=: (untyped) -> untyped
  end
  include GeneratedAssociationMethods

  def self.with_attached_images: () -> ::Profile::ActiveRecord_Relation

  module GeneratedRelationMethods
    def with_attached_images: () -> ::Profile::ActiveRecord_Relation
  end

  class ActiveRecord_Relation < ::ActiveRecord::Relation
    include ::Profile::GeneratedRelationMethods
    include ::_ActiveRecord_Relation[::Profile, ::Integer]
    include ::Enumerable[::Profile]
  end

  class ActiveRecord_Associations_CollectionProxy < ::ActiveRecord::Associations::CollectionProxy
    include ::Profile::GeneratedRelationMethods
    include ::_ActiveRecord_Relation[::Profile, ::Integer]
  end
end
