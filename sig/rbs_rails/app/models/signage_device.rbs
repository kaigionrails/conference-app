class SignageDevice < ::ApplicationRecord
  extend ::_ActiveRecord_Relation_ClassMethods[::SignageDevice, ::SignageDevice::ActiveRecord_Relation, ::Integer]

  module GeneratedAttributeMethods
    def id: () -> ::Integer

    def id=: (::Integer) -> ::Integer

    def id?: () -> bool

    def id_changed?: () -> bool

    def id_change: () -> [ ::Integer?, ::Integer? ]

    def id_will_change!: () -> void

    def id_was: () -> ::Integer?

    def id_previously_changed?: () -> bool

    def id_previous_change: () -> ::Array[::Integer?]?

    def id_previously_was: () -> ::Integer?

    def id_before_last_save: () -> ::Integer?

    def id_change_to_be_saved: () -> ::Array[::Integer?]?

    def id_in_database: () -> ::Integer?

    def saved_change_to_id: () -> ::Array[::Integer?]?

    def saved_change_to_id?: () -> bool

    def will_save_change_to_id?: () -> bool

    def restore_id!: () -> void

    def clear_id_change: () -> void

    def device_name: () -> ::String

    def device_name=: (::String) -> ::String

    def device_name?: () -> bool

    def device_name_changed?: () -> bool

    def device_name_change: () -> [ ::String?, ::String? ]

    def device_name_will_change!: () -> void

    def device_name_was: () -> ::String?

    def device_name_previously_changed?: () -> bool

    def device_name_previous_change: () -> ::Array[::String?]?

    def device_name_previously_was: () -> ::String?

    def device_name_before_last_save: () -> ::String?

    def device_name_change_to_be_saved: () -> ::Array[::String?]?

    def device_name_in_database: () -> ::String?

    def saved_change_to_device_name: () -> ::Array[::String?]?

    def saved_change_to_device_name?: () -> bool

    def will_save_change_to_device_name?: () -> bool

    def restore_device_name!: () -> void

    def clear_device_name_change: () -> void

    def last_heaetbeated_at: () -> ::ActiveSupport::TimeWithZone?

    def last_heaetbeated_at=: (::ActiveSupport::TimeWithZone?) -> ::ActiveSupport::TimeWithZone?

    def last_heaetbeated_at?: () -> bool

    def last_heaetbeated_at_changed?: () -> bool

    def last_heaetbeated_at_change: () -> [ ::ActiveSupport::TimeWithZone?, ::ActiveSupport::TimeWithZone? ]

    def last_heaetbeated_at_will_change!: () -> void

    def last_heaetbeated_at_was: () -> ::ActiveSupport::TimeWithZone?

    def last_heaetbeated_at_previously_changed?: () -> bool

    def last_heaetbeated_at_previous_change: () -> ::Array[::ActiveSupport::TimeWithZone?]?

    def last_heaetbeated_at_previously_was: () -> ::ActiveSupport::TimeWithZone?

    def last_heaetbeated_at_before_last_save: () -> ::ActiveSupport::TimeWithZone?

    def last_heaetbeated_at_change_to_be_saved: () -> ::Array[::ActiveSupport::TimeWithZone?]?

    def last_heaetbeated_at_in_database: () -> ::ActiveSupport::TimeWithZone?

    def saved_change_to_last_heaetbeated_at: () -> ::Array[::ActiveSupport::TimeWithZone?]?

    def saved_change_to_last_heaetbeated_at?: () -> bool

    def will_save_change_to_last_heaetbeated_at?: () -> bool

    def restore_last_heaetbeated_at!: () -> void

    def clear_last_heaetbeated_at_change: () -> void

    def created_at: () -> ::ActiveSupport::TimeWithZone

    def created_at=: (::ActiveSupport::TimeWithZone) -> ::ActiveSupport::TimeWithZone

    def created_at?: () -> bool

    def created_at_changed?: () -> bool

    def created_at_change: () -> [ ::ActiveSupport::TimeWithZone?, ::ActiveSupport::TimeWithZone? ]

    def created_at_will_change!: () -> void

    def created_at_was: () -> ::ActiveSupport::TimeWithZone?

    def created_at_previously_changed?: () -> bool

    def created_at_previous_change: () -> ::Array[::ActiveSupport::TimeWithZone?]?

    def created_at_previously_was: () -> ::ActiveSupport::TimeWithZone?

    def created_at_before_last_save: () -> ::ActiveSupport::TimeWithZone?

    def created_at_change_to_be_saved: () -> ::Array[::ActiveSupport::TimeWithZone?]?

    def created_at_in_database: () -> ::ActiveSupport::TimeWithZone?

    def saved_change_to_created_at: () -> ::Array[::ActiveSupport::TimeWithZone?]?

    def saved_change_to_created_at?: () -> bool

    def will_save_change_to_created_at?: () -> bool

    def restore_created_at!: () -> void

    def clear_created_at_change: () -> void

    def updated_at: () -> ::ActiveSupport::TimeWithZone

    def updated_at=: (::ActiveSupport::TimeWithZone) -> ::ActiveSupport::TimeWithZone

    def updated_at?: () -> bool

    def updated_at_changed?: () -> bool

    def updated_at_change: () -> [ ::ActiveSupport::TimeWithZone?, ::ActiveSupport::TimeWithZone? ]

    def updated_at_will_change!: () -> void

    def updated_at_was: () -> ::ActiveSupport::TimeWithZone?

    def updated_at_previously_changed?: () -> bool

    def updated_at_previous_change: () -> ::Array[::ActiveSupport::TimeWithZone?]?

    def updated_at_previously_was: () -> ::ActiveSupport::TimeWithZone?

    def updated_at_before_last_save: () -> ::ActiveSupport::TimeWithZone?

    def updated_at_change_to_be_saved: () -> ::Array[::ActiveSupport::TimeWithZone?]?

    def updated_at_in_database: () -> ::ActiveSupport::TimeWithZone?

    def saved_change_to_updated_at: () -> ::Array[::ActiveSupport::TimeWithZone?]?

    def saved_change_to_updated_at?: () -> bool

    def will_save_change_to_updated_at?: () -> bool

    def restore_updated_at!: () -> void

    def clear_updated_at_change: () -> void
  end
  include GeneratedAttributeMethods
  def signage_device_assigns: () -> ::SignageDeviceAssign::ActiveRecord_Associations_CollectionProxy
  def signage_device_assigns=: (::SignageDeviceAssign::ActiveRecord_Associations_CollectionProxy | ::Array[::SignageDeviceAssign]) -> (::SignageDeviceAssign::ActiveRecord_Associations_CollectionProxy | ::Array[::SignageDeviceAssign])
  def signage_device_assign_ids: () -> ::Array[::Integer]
  def signage_device_assign_ids=: (::Array[::Integer]) -> ::Array[::Integer]

  module GeneratedAssociationMethods
  end
  include GeneratedAssociationMethods

  module GeneratedRelationMethods
  end

  class ActiveRecord_Relation < ::ActiveRecord::Relation
    include ::SignageDevice::GeneratedRelationMethods
    include ::_ActiveRecord_Relation[::SignageDevice, ::Integer]
    include ::Enumerable[::SignageDevice]
  end

  class ActiveRecord_Associations_CollectionProxy < ::ActiveRecord::Associations::CollectionProxy
    include ::SignageDevice::GeneratedRelationMethods
    include ::_ActiveRecord_Relation[::SignageDevice, ::Integer]
  end
end
